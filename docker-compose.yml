version: "3.7"
services:
  app:
    build:
      args:
        user: user
        uid: 1000
      context: ./
      dockerfile: ./.docker/Dockerfile
    image: insure_ur_bro
    container_name: insure_ur_bro-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./insure_ur_bro/:/var/www
    networks:
      - insure_ur_bro

  nginx:
    image: nginx:alpine
    container_name: insure_ur_bro-nginx
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./insure_ur_bro/:/var/www
      - ./.docker/nginx/:/etc/nginx/conf.d/
    networks:
      - insure_ur_bro

  MySQL:
    image: mysql:latest
    container_name: insure_ur_bro-MySQL
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: insure_ur_bro
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root
      MYSQL_USER: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - insure_ur_bro

  phpMyAdmin:
    image: phpmyadmin:latest
    container_name: phpMyAdmin
    restart: always
    ports:
      - 8001:80
    environment:
      PMA_HOST: MySQL
      MYSQL_USERNAME: root
      MYSQL_ROOT_PASSWORD: root
    networks:
      - insure_ur_bro
    depends_on:
      - MySQL



networks:
  insure_ur_bro:
    driver: bridge